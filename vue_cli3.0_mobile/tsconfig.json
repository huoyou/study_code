{
  // TIP 将以下目录，包括在TypeScript解析之中
  "include":         [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  // TIP 将以下目录，排除在TypeScript解析之外
  "exclude":         [
    "node_modules"
  ],
  "compilerOptions": {
    /**
    * TIP 以下的配置，在稳定版的Vue+TypeScript+MyFrameWork之上，于【2019年3月16日20:59:34】又更新了一版。
    * TIP 参考资料：
    * TIP        1.HstarDoc/TypeScript配置文件tsconfig简析.md at master · hstarorg/HstarDoc - https://github.com/hstarorg/HstarDoc/blob/master/%E5%89%8D%E7%AB%AF%E7%9B%B8%E5%85%B3/TypeScript%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6tsconfig%E7%AE%80%E6%9E%90.md
    */
    // "target": "es5",
    // TIP 最终编译成的js版本。
    "target":                           "es5",
    // TODO 基础模块。（TIP 此处，需要【>=es5的module】。不然比如【commonjs】会报错：【Uncaught ReferenceError: exports is not defined】）
    "module":                           "esnext",
    // TIP 添加的ES语言依赖包
    "lib":                              [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ],
    /*这可以对 `this` 上的数据属性进行更严格的推断-1*/
    // TODO 启用 --strict相当于启用 --noImplicitAny, --noImplicitThis, --alwaysStrict， --strictBindCallApply， --strictNullChecks和 --strictFunctionTypes和--strictPropertyInitialization。
    "strict":                           true,
    /*这可以对 `this` 上的数据属性进行更严格的推断-2*/
    /* TODO 这里，暂时不对this 进行强制规范。（避开'this' implicitly has type 'any' because it does not have a type annotation.的错误） */
    /* TODO 最新的修改，将this改为super。然后开启this的强制规范。 */
    /* TODO 最最新的修改，将  super的调用，修改为  static的调用 */
    "noImplicitThis":                   true,
    "jsx":                              "preserve",
    "importHelpers":                    true,
    /* TODO 此处，注意，setTimeout这种api，在不同ts环境中，也会有表现区别（比如，返回类型完全不一致。）。所以，我们在浏览器环境，设置为classic，而非node*/
    /* TODO 此处，默认的vue-cli 3-ts模式，是node。  而且切换为classic后，也不能达到预期效果*/
    "moduleResolution":                 "node",
    /* 启用 vue-class-component 及 vuex-class 需要开启此选项 */
    "experimentalDecorators":           true,
    /* 开启TypeScript反射。（实验性API：元数据反射） */
    "emitDecoratorMetadata":            true,
    /* TODO 启用 vuex-class 需要开启此选项 */
    /* FIXME Vue版本的Bug，此选项需要关闭。直到Vue最新更新 */
    /* TODO 最新版的自定义框架，此选项已可以打开 */
    "strictFunctionTypes":              true,
    "esModuleInterop":                  true,
    "sourceMap":                        true,
    "baseUrl":                          ".",
    /* TODO 开启禁用隐式any的严格（开启后，如果使用any，你必须显式地声明） */
    "noImplicitAny":                    true,
    /*严格属性初始化：Vue组件类的属性是否需要初始化*/
    /* TODO 仍然强制要求初始化；只是用  ts-ignore  注释 */
    /* TODO 此处，为了  vuex的工具使用，将初始化检查，列为非必要 */
    /* TODO 最终方案：① 为了Vue组件类每个属性值，都得到初始化（若Vue组件类有一个属性未初始化，则可能会无法数据绑定），这个选项检查，是必要的。
            ② 对于有些  @Prop选项、@Getter-vuex属性，不能自己初始化必须留空等待框架初始化的，则用  @MyGetter("username") username!: string; 的【!:】方式，告诉ts编译器：此处必定有值。（相对应的，【?:】表示可能有值也可能为undefined。【:】则是一种居中的表现（指不作具体预先判断，具体表现交给tsconfig去进行复查\。）。）*/
    "strictPropertyInitialization":     true,
    // TODO 允许使用非ts文件（重要）
    "allowJs":                          true,
    //
    // TODO 用TypeScript的配置选项，来让【for-of】在ES5版本下也能获得【兼容性处理】。
    // 参考资料：TypeScript 2.3: Downlevel Iteration for ES3/ES5  –  酷辣虫 CoLaBug - https://www.colabug.com/277936.html
    "downlevelIteration":               true,
    // 显示TS的诊断信息
    "diagnostics":                      true,
    // TODO 不允许：隐式的返回值声明（或有些代码分支没有返回值）
    "noImplicitReturns":                true,
    // TODO 校验【switch-case】语法，禁止出现多个case穿透的情况（要求强制写break隔开）。（default可以不加，但绝不能穿透）
    "noFallthroughCasesInSwitch":       true,
    // TODO 不允许有，【无法访问的代码】：更加严格的检验。
    "allowUnreachableCode":             false,
    // TODO 用import导入文件时，严格区分【文件名大小写】，不允许文件名大小写混淆。
    "forceConsistentCasingInFileNames": true,
    // TODO 这个宽松开关，将其打开！！！因为有很多js库的  .d.ts 文件编写比较混乱，无法达到通过严格检查的地步  TIP 更加严格的检查：不允许，从【没有默认导出的文件中】，进行【模块默认导入（import x from 'aaa.tx'）】
    "allowSyntheticDefaultImports":     true,
    "types":                            [
      "webpack-env"
    ],
    "paths":                            {
      "@/*": [
        "src/*"
      ]
    }
  }
}
