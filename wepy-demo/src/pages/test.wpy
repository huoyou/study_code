<style lang="less" scoped>
.container {
  height: 100%;
  background-color: #eee;
}
</style>
<template>
    <view class="container">
        <text class="txt">{{msg}}</text>
        <text wx:if="{{condition}}" class="txt">{{msg}}+1</text>
        <checkbox checked="{{isChecked}}"></checkbox>
        <view hidden="{{flag ? true : false}}">Hidden</view>
        <view>{{"hello" + name}}</view>
        <view wx:for="{{list}}" wx:key='index'>{{item}}_{{index}}</view>
        <view id="tapTest" data-hi="WeChat" bindtap="tapName"> Click me! </view>
    </view>
</template>
<script>
import wepy from 'wepy';
import Bmob from 'hydrogen-js-sdk';
Bmob.initialize(
  'da40d09276fcc91b75eba34657d81f61',
  '4e2162a7086839946d7df2f434e41ff0',
  'ce5bab7bdcc3bc654344ffc55cc69beb'
);
export default class MyPage extends wepy.page {
  customData = {}; // 自定义数据

  customFunction() {} //自定义方法

  onLoad() {
  } // 在Page和Component共用的生命周期函数

  onShow() {} // 只在Page中存在的页面生命周期函数

  config = {}; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

  data = {
    msg: 'hello wepy',
    condition: true,
    isChecked: true,
    flag: false,
    name: 'MINA',
    list: [0, 1, 2, 3, 4]
  }; // 页面所需数据均需在这里声明，可用于模板数据绑定

  components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件

  mixins = []; // 声明页面所引用的Mixin实例

  computed = {}; // 声明计算属性

  watch = {}; // 声明数据watcher

  methods = {
   tapName() {
       console.log('tapName')
    //    wx.navigateTo
       wx.switchTab({url:'index'})
   }
  }; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

  events = {}; // 声明组件之间的事件处理函数
  onPullDownRefresh() {
    console.log('下拉刷新');
  }
}
</script>



