<template>
  <view class="container">
    <view class="imgBox"
          @tap="uploadImg">+</view>
    <p>{{userInfo.nickName}}</p>
    <p>{{userInfo.gender == 1 ? '男':'女'}}</p>
    <p>{{userInfo.province}}{{userInfo.city}}</p>
    <image src="{{userInfo.avatarUrl}}"
           alt="">
  </view>
</template>
<script>
  import wepy from 'wepy';
  import Bmob from 'hydrogen-js-sdk';
  Bmob.initialize(
    'da40d09276fcc91b75eba34657d81f61',
    '4e2162a7086839946d7df2f434e41ff0',
    'ce5bab7bdcc3bc654344ffc55cc69beb'
  );
  import { get, post } from '../api/api.js'
  export default class MyPage extends wepy.page {
    customData = {}; // 自定义数据

    customFunction() { } //自定义方法
    async onLoad() {
      // 在Page和Component共用的生命周期函数
      await wepy.login();
      let userInfo = await wepy.getUserInfo();
      this.userInfo = userInfo.userInfo;
      this.getAll();
    }
    getAll() {
      let param = {
      };
      let param1 = {
        accessReportNo: 'ZR190411015'
      };
      post(`/api/rmAccessTemplate/selectAll`, param).then(res => {
        console.log(1111, res)
      });
      get(`/api/rmAccessReportFeeDetail/getFeeDetailList`, param1).then(res => {
        console.log(2222, res)
      });
    }
    config = {}; // 只在Page实例中存在的配置数据，对应于原生的page.json文件

    data = {
      msg: 'hello wepy',
      userInfo: null,
      condition: true,
      isChecked: true,
      flag: false,
      name: 'MINA',
      list: [0, 1, 2, 3, 4]
    }; // 页面所需数据均需在这里声明，可用于模板数据绑定

    components = {}; // 声明页面中所引用的组件，或声明组件中所引用的子组件

    mixins = []; // 声明页面所引用的Mixin实例

    computed = {}; // 声明计算属性

    watch = {}; // 声明数据watcher

    methods = {
      tapName() {
        console.log('tapName');
        //    wx.navigateTo
        wepy.switchTab({ url: 'index' });
      },
      uploadImg1() {
        let param = {
          token: "bf2593fa-6e7b-47b3-b9f8-e9cdd99d1bf9",
          biz_no: this.access_token.biz_no
        };
        post(`/api/identify/getResult`, param).then(res => {
          console.log('res', res)
          // if (res.code == 200) {
          //   this.imgSrc = url;
          //   this.msg = "活体验证成功!";
          // } else {
          //   this.imgSrc = url1;
          //   this.msg = "活体验证失败!";
          // }
        });
      },
      uploadImg() {
        var that = this;
        wx.chooseImage({
          count: 1, // 默认9
          sizeType: ['compressed'], // 可以指定是原图还是压缩图，默认二者都有
          sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
          success: function (res) {
            console.log(1111);
            var tempFilePaths = res.tempFilePaths;
            if (tempFilePaths.length > 0) {
              let date = that.methods.formdata();
              var name = `${date}.jpg`; //上传的图片的别名，建议可以用日期命名
              var file = Bmob.File(name, tempFilePaths[0]);
              file.save().then(
                function (res) {
                  console.log(res);
                  const query = Bmob.Query('photlList');
                  query.set('url', res[0].url);
                  query.set('filename', res[0].filename);
                  query
                    .save()
                    .then(res => {
                      console.log(res);
                    })
                    .catch(err => {
                      console.log(err);
                    });
                },
                function (error) {
                  console.log(error);
                }
              );
            }
          },
          errer: function (err) {
            console.log(err);
          }
        });
      },
      formdata() {
        var date = new Date();
        var time = Date.parse(date);
        let time1 = time / 1000;
        return time1;
      }
    }; // 声明页面wxml中标签的事件处理函数。注意，此处只用于声明页面wxml中标签的bind、catch事件，自定义方法需以自定义方法的方式声明

    events = {}; // 声明组件之间的事件处理函数
    onPullDownRefresh() {
      console.log('下拉刷新');
    }
  }
</script>
<style lang="less" scoped>
  .container {
    height: 100%;
    .imgBox {
      width: 100px;
      height: 100px;
      background-color: #eee;
      display: flex;
      justify-content: center;
      align-items: center;
      color: #fff;
      font-size: 48px;
    }
  }
</style>



